{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employees/create-employee/create-employee.component.css","webpack:///./src/app/employees/create-employee/create-employee.component.html","webpack:///./src/app/employees/create-employee/create-employee.component.ts","webpack:///./src/app/employees/list-employees/list-employees.component.css","webpack:///./src/app/employees/list-employees/list-employees.component.html","webpack:///./src/app/employees/list-employees/list-employees.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-primary\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\"\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item active\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"list\\\">List\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"create\\\">Create</a>\\n                </li>\\n\\n            </ul>\\n        </div>\\n    </nav>\\n\\n\\n    <router-outlet></router-outlet>\\n</div> -->\\n\\nzdfcsdfsdf\\n\\n\\n\\n\\n\\n\\n<!-- <div class=\\\"container\\\">\\n    <table class=\\\"table table-sm\\\">\\n        <thead>\\n            <tr>\\n                <th>Firstname</th>\\n                <th>Lastname</th>\\n                <th>Email</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr>\\n                <td>Default</td>\\n                <td>Defaultson</td>\\n                <td>def@somemail.com</td>\\n            </tr>\\n            <tr class=\\\"table-primary\\\">\\n                <td>Primary</td>\\n                <td>Joe</td>\\n                <td>joe@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-success\\\">\\n                <td>Success</td>\\n                <td>Doe</td>\\n                <td>john@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-danger\\\">\\n                <td>Danger</td>\\n                <td>Moe</td>\\n                <td>mary@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-info\\\">\\n                <td>Info</td>\\n                <td>Dooley</td>\\n                <td>july@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-warning\\\">\\n                <td>Warning</td>\\n                <td>Refs</td>\\n                <td>bo@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-active\\\">\\n                <td>Active</td>\\n                <td>Activeson</td>\\n                <td>act@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-secondary\\\">\\n                <td>Secondary</td>\\n                <td>Secondson</td>\\n                <td>sec@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-light\\\">\\n                <td>Light</td>\\n                <td>Angie</td>\\n                <td>angie@example.com</td>\\n            </tr>\\n            <tr class=\\\"table-dark text-dark\\\">\\n                <td>Dark</td>\\n                <td>Bo</td>\\n                <td>bo@example.com</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div> -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// Import RouterModule\nimport { RouterModule, Routes } from '@angular/router';\n\n// import { NgForm } from '@angular/forms';\n// The ngForm directive is provided by Angular FormsModule.So for us to be able to use it, we will have to import the FormsModule in our AppModule file(app.module.ts).So please make sure to include the following import statement.Also include \"FormsModule\" in the imports array of @NgModule decorator.If \"FormsModule\" is not imported you will see the following error in the browser developer toolsthere is no directive with exportas set to ngform\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { ListEmployeesComponent } from './employees/list-employees/list-employees.component';\nimport { CreateEmployeeComponent } from './employees/create-employee/create-employee.component';\n\n// Each route maps a URL path to a component\n// The 3rd route specifies the route to redirect to if the path\n// is empty. In our case we are redirecting to /list\n\n// pathMatch property value can be full or prefix. For now we\n// will set it to full as we want to do a full match.\nconst appRoutes: Routes = [\n  { path: 'list', component: ListEmployeesComponent },\n  { path: 'create', component: CreateEmployeeComponent },\n  { path: '', redirectTo: '/list', pathMatch: 'full' }\n];\n\n// To let the router know about the routes configured above,\n// pass \"appRoutes\" constant to forRoot(appRoutes) method\n// We also have forChild() method. We will discuss the difference\n// and when to use one over the other\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListEmployeesComponent,\n    CreateEmployeeComponent\n  ],\n  // Include RouterModule in the \"imports\" array of the @NgModule() decorator\n  //Include FormsModule\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".CustomPaddingforForm{\\r\\n    padding: 20px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"row  \\\">\\n        <div class=\\\"offset-lg-3 col-lg-6 offset-lg-3 card bg-light \\\">\\n            <form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEmployee(employeeForm)\\\">\\n                <div class=\\\"CustomPaddingforForm\\\">\\n\\n                    <h3 class=\\\"text-center\\\">Create Employee</h3>\\n\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"font-weight-bold\\\" for=\\\"fullName\\\">Full Name</label>\\n                        <input id=\\\"fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fullName\\\" [(ngModel)]=\\\"fullName\\\">\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Gender</label>\\n                        <div class=\\\"form-control\\\">\\n                            <label class=\\\"radio-inline\\\">\\n                                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"male\\\" [(ngModel)]=\\\"gender\\\"> Male\\n                            </label>\\n                            <label class=\\\"radio-inline\\\">\\n                                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"female\\\" [(ngModel)]=\\\"gender\\\"> Female\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Contact Preference</label>\\n                        <div class=\\\"form-control\\\">\\n                            <label class=\\\"radio-inline\\\">\\n                                <input type=\\\"radio\\\" name=\\\"contactPreference\\\" value=\\\"email\\\" [(ngModel)]=\\\"contactPreference\\\"> Email\\n                            </label>\\n                            <label class=\\\"radio-inline\\\">\\n                                <input type=\\\"radio\\\" name=\\\"contactPreference\\\" value=\\\"phone\\\" [(ngModel)]=\\\"contactPreference\\\"> Phone\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"font-weight-bold\\\" for=\\\"email\\\">Email</label>\\n                        <input id=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"phoneNumber\\\">Phone Number</label>\\n                        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"phoneNumber\\\">\\n                    </div>\\n                    <div class=\\\"form-control\\\">\\n                        <label class=\\\"checkbox-inline\\\">\\n                            <input type=\\\"checkbox\\\" name=\\\"isActive\\\" [(ngModel)]=\\\"isActive\\\">Is Active\\n                        </label>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"department\\\">Department</label>\\n                        <select id=\\\"department\\\" name=\\\"department\\\"\\n                                [(ngModel)]=\\\"department\\\" class=\\\"form-control\\\">\\n                                <option *ngFor=\\\"let dept of departments\\\" [value]=\\\"dept.id\\\">\\n                                   {{ dept.name}}\\n                                </option>\\n                                <!-- ngFor is a structural directive there is an asterisk before it.\\n                                Structural directives modify the DOM, i.e they add or remove the elements from DOM. -->\\n                          <!-- <option value=\\\"1\\\">Help Desk</option>\\n                          <option value=\\\"2\\\">HR</option>\\n                          <option value=\\\"3\\\">IT</option>\\n                          <option value=\\\"4\\\" disabled>Paroll</option> -->\\n                        </select>\\n                      </div>\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n\\n\\n\\n    <div class=\\\"row  \\\">\\n        <div class=\\\"col text-center font-weight-bold JSONContentToBeautify\\\">\\n            Angular Generated Form Model :\\n            <i class=\\\"text-primary\\\"> {{employeeForm.value | json}}</i>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n\\n\\n\\n\\n<!-- JSON beautification reference files\\n    <link href=\\\"http://www.jqueryscript.net/css/jquerysctipttop.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.2/css/bootstrap.min.css\\\" integrity=\\\"sha384-y3tfxAZXuh4HwSYylfB+J125MxIs6mR5FOHamPBG064zB+AFeWH94NdvaCBm8qnd\\\"\\n        crossorigin=\\\"anonymous\\\">\\n    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"beautify-json.css\\\">\\n    <script src=\\\"https://code.jquery.com/jquery-1.12.0.min.js\\\"></script>\\n    <script src=\\\"jquery.beautify-json.js\\\"></script>\\n    <script>\\n        $(document).ready(function () {\\n            $('.JSONContentToBeautify').beautifyJSON({\\n                type: \\\"plain\\\",\\n                // highlight JSON on mouse hover\\n                hoverable: true,\\n                // make nested nodes collapsible\\n                collapsible: true,\\n                color: true\\n\\n            });\\n           \\n        });\\n    </script> -->\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport {Department} from '../../models/department.model'\n\n\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  gender = 'male';\n  isActive = true;\n  // department = '3';\n  departments: Department[] = [\n    { id: 1, name: 'Help Desk' },\n    { id: 2, name: 'HR' },\n    { id: 3, name: 'IT' },\n    { id: 4, name: 'Payroll' }\n  ];\n  \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  // Make sure to import NgForm type from '@angular/forms'\n  saveEmployee(employeeForm: NgForm): void {\n    console.log(employeeForm.value);\n  }\n}\n","module.exports = \".imageClass {\\n    width: 200px;\\n    height: 200px;\\n}\\n\\n\\n/* To vertically align the content in div */\\n\\n\\n.vertical-align {\\n    display: flex;\\n    align-items: center;\\n}\"","module.exports = \"<button>jQuery Usage Start Animation</button>\\n\\n<div id=\\\"JQAnim\\\" style=\\\"border:1px solid #555;border-radius:3px;color:white;background:#555;height:105px;width:260px;position:relative; margin-top:10px\\\">jQuery</div>\\n\\n\\n<div  *ngFor=\\\"let employee of employees\\\">\\n<div class=\\\"row vertical-align\\\">\\n\\n    <div class=\\\"col-xs-4 offset-xs-1\\\">\\n        <img class=\\\"imageClass\\\" [src]=\\\"employee.photoPath\\\" />\\n    </div>\\n    <div class=\\\"col-xs-7\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Gender\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.gender}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Date of Birth\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.dateOfBirth | date}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Contact Preference\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.contactPreference}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Phone\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.phoneNumber}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Email\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.email}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Department\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.department}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-6\\\">\\n                Is Active\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                : {{employee.isActive}}\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n</div> \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../../models/employee.model';\n\n// Jquery reference \nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.css']\n})\nexport class ListEmployeesComponent implements OnInit {\n  employees: Employee[] = [\n    {\n      id: 1,\n      name: 'Mark',\n      gender: 'Male',\n      contactPreference: 'Email',\n      email: 'mark@pragimtech.com',\n      dateOfBirth: new Date('10/25/1988'),\n      department: 'IT',\n      isActive: true,\n      photoPath: '../../../../emp/assets/images/mark.png'\n    },\n    {\n      id: 2,\n      name: 'Mary',\n      gender: 'Female',\n      contactPreference: 'Phone',\n      phoneNumber: 2345978640,\n      dateOfBirth: new Date('11/20/1979'),\n      department: 'HR',\n      isActive: true,\n      photoPath: '../ASPNETAng6/a6/a6spa1/src/assets/images/mary.png'\n    },\n    {\n      id: 3,\n      name: 'John',\n      gender: 'Male',\n      contactPreference: 'Phone',\n      phoneNumber: 5432978640,\n      dateOfBirth: new Date('3/25/1976'),\n      department: 'IT',\n      isActive: false,\n      photoPath: '../../a6/a6spa1/src/assets/images/john.png'\n    },\n  ];\n  constructor() { }\n\n  ngOnInit() {\n    $(document).ready(function () {\n      $(\"button\").click(function () {\n       \n          var div = $(\"#JQAnim\");\n          div.animate({ left: '100px' }, \"slow\");\n          div.animate({ fontSize: '5em' }, \"slow\");\n        \n      });\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}